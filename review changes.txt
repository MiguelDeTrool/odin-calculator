const SCREEN = document.querySelector(".screen");
const NUMBER_BUTTONS = document.querySelectorAll("button.number");
const operatorButtons = document.querySelectorAll(".operator");
const evaluateButton = document.querySelector(".evaluate");


class CalculatorData {
  constructor() {
    this.wasLastButtonOp = false;
    this.lastNumber = "";

    this.lastOperator = "";

    this.currentNumber = "";

}
}
let calculatorData = new CalculatorData();

function backspace(elements) { //removeLastCharacter, more descriptive function name
    elements.screen.textContent = elements.screen.textContent.slice(0, -1);

    }


document.querySelector(".backspace").addEventListener("click", function() {backspace(ELEMENTS)});

function clearScreenAndMemory(calculator) {
    SCREEN.textContent = "";
    calculator.lastNumber = "";
    calculator.lastOperator = "";
    calculator.currentNumber = "";
}



document.querySelector(".AC").addEventListener("click", function() { clearScreenAndMemory(calculatorData); });

function handleNumber(number) {
    if (lastButtonOp === true) {
        lastNumber = screen.textContent;
        screen.textContent = "";
        lastButtonOp = false;
    }
    if (number == '.' && screen.textContent.includes(".")) {
        return;
    }

    return (currentNumber + number).substring(0, 12);

}

NUMBER_BUTTONS.forEach(function(button) {
    button.addEventListener("click", function() {


       number =  handleNumber(button.textContent);

        });

});

function operate(a, b, operator) { //Would rather have this in operatorDeclarations.js
    a = Number(a);
    b = Number(b);
    if (operator === '+') return sum(a, b);
    if (operator === '-') return subtract(a, b);
    if (operator === '*') return multiply(a, b);
    if (operator === '/') return divide(a, b);
}

function evaluate() {
    if (lastButtonOp == true) {
        return;
    }
assertNotDivideByZero(calculatorData);
    if (lastOperator == "/" && Number(screen.textContent) == 0) { //check not dividing by zero
        clearScreenAndMemory();
        screen.textContent = "Can't divide by 0";
        return;
    }
    if (lastOperator != "") {
        let result = operate(lastNumber, currentNumber, lastOperator);
        result = roundAccurately(result, 5);
        screen.textContent = Math.min(result, 999999999999);
    }
}

function handleOperator(operator) {
    evaluate();
    lastButtonOp = true;
    lastOperator = operator;
}

operatorButtons.forEach(function(button) {
    button.addEventListener("click", function(e) {
        handleOperator(e.target.textContent);
    });
});

evaluateButton.addEventListener("click", function () {
    evaluate();
    lastOperator = "";
});

function roundAccurately(num, places) {
    return parseFloat(Math.round(num + 'e' + places) + 'e-' + places);
}